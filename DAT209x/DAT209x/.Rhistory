f <- function(x) { return(3 * sin(x / 2) + x) } f(0) f(-1) f(pi)
f <- function(x) { 3 * sin(x / 2) + x } f(0) f(-1) f(pi)
curve(f, -7, 7)
curve(f, -7, 7)
x <- c("b", 2, TRUE)
str(x)
y <- c(1, 2, 3.14, 4, 5)
y
z <- c(FALSE, TRUE, 2, 3, 4) z
matrix(c(5, 4, 3, 2, 1, 0) + 2, nrow = 2) < 5
?sin
a <- 7 b <- 5 myfunc <- function(x, y) {     a <- x + y     b <- x - y     return(a * b) }
myfunc(3, 4)
plot(sin, 0, 2 * pi)
plot(sin, - pi, 2 * pi)
plot(sin, - pi, pi)
plot(sin, pi, 3 * pi)
plot(sin, - pi, pi)
?cat
?density
?if
?"if"
? "if"
my.display <- function(x) {     cat("Summary of input: \n")     return(summary(x)) } x <- rnorm(1000) my.display(x)
?hist
?density
my.display <- function(x, display = FALSE, type = "none", prob = !freq) {     if (display) {         if (type == "hist") {             hist(x)         } elseif (type = "density") {             density(x)         } elseif (type == "none") {             print("”Please specify type as either hist or density”")         }     }     cat("Summary of input: \n")     return(summary(x)) }
my.display <- function(x, display = FALSE, type = "none", prob = !freq) {     if (display) {         if (type == "hist") {             hist(x)         } elseif (type = "density") {             density(x)         } elseif (type == "none") {             print("Please specify type as either hist or density")         }     }     cat("Summary of input: \n")     return(summary(x)) }
? "if"
?hist
set.seed(1234) my.data <- rnorm(200) my.display(my.data)
my.display(my.data, display = TRUE, type = "hist")
my.display <- function(x, display = FALSE, type = "none", prob = FALSE) {     if (display) {         if (type == "hist") {             if (prob)                 hist(x, freq = TRUE)             else                 hist(x)         } else if (type == "density") {             density(x)         } else if (type == "none") {             print("Please specify type as either hist or density")         }     }     cat("Summary of input: \n")     return(summary(x)) }
set.seed(1234) my.data <- rnorm(200) my.display(my.data) my.display(my.data, display = TRUE, type = "hist")
my.display(my.data, display = TRUE, type = "hist", prob = TRUE)
my.display(my.data, display = TRUE, type = "hist", prob = TRUE)
my.display <- function(x, display = FALSE, type = "none", prob = FALSE) {     if (display) {         if (type == "hist") {             if (prob == TRUE)                 hist(x, freq = FALSE)             else                 hist(x)         } else if (type == "density") {             density(x)         } else if (type == "none") {             print("Please specify type as either hist or density")         }     }     cat("Summary of input: \n")     return(summary(x)) } set.seed(1234) my.data <- rnorm(200) my.display(my.data) my.display(my.data, display = TRUE, type = "hist") my.display(my.data, display = TRUE, type = "hist", prob = TRUE)
my.display(my.data, display = TRUE, type = "density")
my.display(my.data, display = TRUE, type = "density")
my.display(my.data, display = TRUE, type = "density")
my.display(my.data, display = TRUE, type = "density")
?density
?plot
my.display <- function(x, display = FALSE, type = "none", prob = FALSE) {     if (display) {         if (type == "hist") {             if (prob == TRUE)                 hist(x, freq = FALSE)             else                 hist(x)         } else if (type == "density") {             plot(x,density(x))         } else if (type == "none") {             print("Please specify type as either hist or density")         }     }     cat("Summary of input: \n")     return(summary(x)) } set.seed(1234) my.data <- rnorm(200) my.display(my.data) my.display(my.data, display = TRUE, type = "hist") my.display(my.data, display = TRUE, type = "hist", prob = TRUE) my.display(my.data, display = TRUE, type = "density")
?plot
methods(plot)
?plot.density
my.display <- function(x, display = FALSE, type = "none", prob = FALSE) {     if (display) {         if (type == "hist") {             if (prob == TRUE)                 hist(x, freq = FALSE)             else                 hist(x)         } else if (type == "density") {             plot(density(x))         } else if (type == "none") {             print("Please specify type as either hist or density")         }     }     cat("Summary of input: \n")     return(summary(x)) } set.seed(1234) my.data <- rnorm(200) my.display(my.data) my.display(my.data, display = TRUE, type = "hist") my.display(my.data, display = TRUE, type = "hist", prob = TRUE) my.display(my.data, display = TRUE, type = "density")
my.display(my.data, display = TRUE)
set.seed(1786) data.exercise.3.1 <- exp(matrix(rnorm(2000), nrow = 100)) index1.temp <- sample(1:100, 10) index2.temp <- sample(1:20, 10) for (i in 1:10) {     data.exercise.3.1[index1.temp[i], index2.temp[i]] <- -1 }
my.data <- data.exercise.3.1
head(my.data)
my.data <- data.exercise.3.1 head(my.data)
dim(my.data)
set.seed(1786) data.exercise.3.1 <- exp(matrix(rnorm(2000), nrow = 100)) index1.temp <- sample(1:100, 10) index2.temp <- sample(1:20, 10) for (i in 1:10) {     data.exercise.3.1[index1.temp[i], index2.temp[i]] <- -1 } my.data <- data.exercise.3.1 head(my.data) dim(my.data)
dim(my.data)[1]
set.seed(1786) data.exercise.3.1 <- exp(matrix(rnorm(2000), nrow = 100)) index1.temp <- sample(1:100, 10) index2.temp <- sample(1:20, 10) for (i in 1:10) {     data.exercise.3.1[index1.temp[i], index2.temp[i]] <- -1 } #my.data <- data.exercise.3.1 #head(my.data) #dim(my.data)[1] for (i in 1:dim(my.data)[1]) {     neg <- sum(my.data[i,] < 0)     if (neg == 0) {         print(cat("The mean of row number ", i, " is ", mean(my.data[i,]), "\n"))     } else if (neg < 3) {         print(cat("<Row ", i, " contains negative values>"))     } else {         print("Too many negative values")         break     } }
set.seed(1786) data.exercise.3.1 <- exp(matrix(rnorm(2000), nrow = 100)) index1.temp <- sample(1:100, 10) index2.temp <- sample(1:20, 10) for (i in 1:10) {     data.exercise.3.1[index1.temp[i], index2.temp[i]] <- -1 } my.data <- data.exercise.3.1 head(my.data)
for (i in 1:dim(my.data)[1]) {     neg <- sum(my.data[i,] < 0)     if (neg == 0) {         print(cat("The mean of row number ", i, " is ", mean(my.data[i,]), "\n"))     } else if (neg < 3) {         print(cat("<Row ", i, " contains negative values>"))     } else {         print("Too many negative values")         break     } }
for (i in 1:dim(my.data)[1]) {     neg <- sum(my.data[i,] < 0)     cnt <- 0     if (neg == 0) {         print(cat("The mean of row number ", i, " is ", mean(my.data[i,]), "\n"))     } else if (neg < 3) {         print(cat("<Row ", i, " contains negative values>\n"))     } else {         cnt <- cnt + 1         if (cnt == 3) {             print("Too many negative values")             break         }     } }
for (i in 1:dim(my.data)[1]) {     neg <- sum(my.data[i,] < 0)     cnt <- 0     if (neg == 0) {         print(cat("The mean of row number ", i, " is ", mean(my.data[i,]), "\n"))     } else if (neg < 3) {         print(cat("<Row ", i, " contains negative values>\n"))     } else {         cnt <- cnt + 1         if (cnt == 3) {             print("Too many negative values")             break         }     } }
my.data <- data.exercise.3.1 head(my.data)
cnt <- 0 for (i in 1:dim(my.data)[1]) {     neg <- sum(my.data[i,] < 0)     if (neg == 0) {         print(cat("The mean of row number ", i, " is ", mean(my.data[i,]), "\n"))     } else if (neg < 3) {         print(cat("<Row ", i, " contains negative values>\n"))     } else {         cnt <- cnt + 1         if (cnt == 3) {             print("Too many negative values")             break         }     } }
cnt <- 0 for (i in 1:dim(my.data)[1]) {     neg <- sum(my.data[i,] < 0)     if (neg == 0) {         print(cat("The mean of row number ", i, " is ", mean(my.data[i,]), "\n"))     } else {         cnt <- cnt + 1         if (cnt < 3) {             print(cat("<Row ", i, " contains negative values>\n"))         } else {             print("Too many negative values")             break         }     } }
set.seed(1786) data.exercise.3.1 <- exp(matrix(rnorm(2000), nrow = 100)) index1.temp <- sample(1:100, 10) index2.temp <- sample(1:20, 10) for (i in 1:10) {     data.exercise.3.1[index1.temp[i], index2.temp[i]] <- -1 } my.data <- data.exercise.3.1 head(my.data) #dim(my.data)[1] cnt <- 0 for (i in 1:dim(my.data)[1]) {     neg <- sum(my.data[i,] < 0)     if (neg == 0) {         print(cat("The mean of row number ", i, " is ", mean(my.data[i,]), "\n"))     } else {         cnt <- cnt + 1         if (cnt <= 3) {             print(cat("<Row ", i, " contains negative values>\n"))         } else {             print("Too many negative values")             break         }     } }
my.dimensions <- c(10, 20, 50, 100, 200, 500, 800, 1000) my.runtime.factors <- numeric(8) r <- 1 k <- my.dimensions[r] y <- matrix(rnorm(k ^ 2), nrow = k) z <- 0 * y time1 <- as.numeric(Sys.time()) #loop: for (i in 1:k) {     for (j in 1:k) {         z[i, j] <- y[i, j] ^ 2     } } time2 <- as.numeric(Sys.time()) time3 <- as.numeric(Sys.time()) # using object form in R:z<-y^2 time4 <- as.numeric(Sys.time()) # run time increase factor:  my.runtime.factors[r] <- (time2 - time1) / (time4 - time3) #Lastly, we plot the runtime factors against the number of elements i
plot(my.dimensions ^ 2, my.runtime.factors, log = "xy", xlab = "Number of operations")
my.dimensions <- c(10, 20, 50, 100, 200, 500, 800, 1000) my.runtime.factors <- numeric(8) r <- 1 k <- my.dimensions[r] y <- matrix(rnorm(k ^ 2), nrow = k) z <- 0 * y time1 <- as.numeric(Sys.time()) #loop: for (i in 1:k) {     for (j in 1:k) {         z[i, j] <- y[i, j] ^ 2     } } time2 <- as.numeric(Sys.time()) time3 <- as.numeric(Sys.time()) # using object form in R:z<-y^2 time4 <- as.numeric(Sys.time()) # run time increase factor:  my.runtime.factors[r] <- (time2 - time1) / (time4 - time3) #Lastly, we plot the runtime factors against the number of elements i plot(my.dimensions ^ 2, my.runtime.factors, log = "xy", xlab = "Number of operations")
my.dimensions <- c(10, 20, 50, 100, 200, 500, 800, 1000) my.runtime.factors <- numeric(8) r <- 1 k <- my.dimensions[r] y <- matrix(rnorm(k ^ 2), nrow = k) z <- 0 * y time1 <- as.numeric(Sys.time()) #loop: for (i in 1:k) {     for (j in 1:k) {         z[i, j] <- y[i, j] ^ 2     } } time2 <- as.numeric(Sys.time()) time3 <- as.numeric(Sys.time()) # using object form in R:z<-y^2 time4 <- as.numeric(Sys.time()) # run time increase factor:  my.runtime.factors[r] <- (time2 - time1) / (time4 - time3) #Lastly, we plot the runtime factors against the number of elements i plot(my.dimensions ^ 2, my.runtime.factors, log = "xy", xlab = "Number of operations")
k1 <- 10 k2 <- 100000 my.data <- as.data.frame(matrix(rnorm(k1 * k2), nrow = k1)) mean1 <- numeric(k2) mean2 <- numeric(k2) for (i in 1:k2) {     mean1[i] <- mean(my.data[, i]) } time1 <- as.numeric(Sys.time()) for (i in 1:k2) {     mean1[i] <- mean(my.data[, i]) } time2 <- as.numeric(Sys.time()) time3 <- as.numeric(Sys.time()) mean2 <- sapply(my.data, mean) time4 <- as.numeric(Sys.time()) (time2 - time1) / (time4 - time3)
for (i in 0:10) {     if (i %% 2 != 0) cat(i)     }
notfound <- TRUE i <- 0 while (notfound) {     if (i %% 2 != 0) {         cat(i)         notfound <- FALSE     } }
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE, FALSE, FALSE, TRUE)) lapply(x, mean)
k <- 1000 r <- 100 set.seed(5556) x <- as.data.frame(matrix(rnorm(r * k), nrow = r))
dim(x)
k <- 1000 r <- 100 set.seed(5556) x <- as.data.frame(matrix(rnorm(r * k), nrow = k)) dim(x)
my.summary <- matrix(nrow = 4, ncol = k)
my.summary
head(my.summary)
k <- 1000 r <- 100 set.seed(5556) x <- as.data.frame(matrix(rnorm(r * k), nrow = k)) dim(x) my.summary <- matrix(nrow = 4, ncol = k)
head(my.summary)
?sapply
x <- matrix(1:12, 4) x[cbind(c(1, 3, 2), c(3, 3, 2))] #first selection
x
x[c(1, 3, 2), c(3, 3, 2)]
row <- matrix(rep(1:100, 100), nrow = 100) column <- matrix(rep(1:100, 100), nrow = 100, byrow = T) A <- 3 * column ^ 3 / (1 + row * column)
row
column
x <- 1:3 y <- seq(4, 8) z <- rep(9:10, 1)
xyz <- c(x, y, z)
xyz
x <- 1:10
x[rep(c(FALSE, TRUE), 5)]
x <- 1:10 x[2 * (1:5) - 1]
x <- matrix(-4:5, nrow = 2) x
