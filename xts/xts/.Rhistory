install.packages("xts")
library(xts)
install.packages("xts") library(xts)
?install.packages
install.packages("xts", lib = "C:\Program Files\Microsoft\R Client\R_SERVER\") ) )))))" install.packages("xts", lib = "C:\Program Files\Microsoft\R Client\R_SERVER")
install.packages("xts", lib = "C:/Program Files/Microsoft/R Client/R_SERVER")
install.packages("xts", lib = "C:/Program Files/Microsoft/R Client/R_SERVER")
library(xts)
install.packages("zoo", lib = "C:/Program Files/Microsoft/R Client/R_SERVER")
install.packages("xts", lib = "C:/Program Files/Microsoft/MRO-3.3.2/library")
library(xts)
data <- rnorm(5)
dates <- seq(as.Date("2016-01-01"), length = 5, by = "days")
smith <- xts(x = data, order.by = dates)
bday <- as.POSIXct("1899-05-08")
hayek <- xts(x = data, order.by = dates, born = bday)
hayek
class(hayek)
str(hayek)
as.xts(austres)
as.matrix(au)
au <- as.xts(austres)
# Convert your xts object (au) into a matrix am
am <- as.matrix(au)
am
index(am)
coredata(am)
tmp_file <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1127/datasets/tmp_file.csv"
dat <- read.csv(tmp_file)
# Convert dat into xts
xts(dat, order.by = as.Date(rownames(dat), "%m/%d/%Y"))
# Read tmp_file using read.zoo
dat_zoo <- read.zoo(tmp_file, index.column = 0, sep = ",", format = "%m/%d/%Y")
# Convert dat_zoo to xts
dat_xts <- as.xts(dat_zoo)
# Convert sunspots to xts using as.xts(). Save this as sunspots_xts
sunspots_xts <- as.xts(sunspots)
# Get the temporary file name
tmp <- tempfile()
# Write the xts object using zoo to tmp 
write.zoo(sunspots_xts, sep = ",", file = tmp)
# Read the tmp file. FUN = as.yearmon converts strings such as Jan 1749 into a proper time class
sun <- read.zoo(tmp, sep = ",", FUN = as.yearmon)
# Convert sun into xts. Save this as sun_xts
sun_xts <- as.xts(sun)
# Create lastweek using the last 1 week of temps
lastweek <- last(temps, "1 week")
# Print the last 2 observations in lastweek
tail(lastweek, 2)
# Extract all but the last two days of lastweek
first(lastweek, "-2 days")
library(xts)
# Create lastweek using the last 1 week of temps
lastweek <- last(temps, "1 week")
# Print the last 2 observations in lastweek
tail(lastweek, 2)
# Extract all but the last two days of lastweek
first(lastweek, "-2 days")
AirPassengers
as.xts(AirPassengers)
?as.xts
as.xts(AirPassengers)
write.csv(as.xts(AirPassengers), "a.csv")
zoo.write(as.xts(AirPassengers), "a.csv")
write.zoo(as.xts(AirPassengers), sep = ",", file = "b.csv")
as.xts(AirPassengers)
AirPass <- as.xts(AirPassengers)
AirPass - lag(AirPass)
AirPass - lag(AirPass, k = 12)
as.xts(austres)
au <- as.xts(austres) # Convert your xts object (au) into a matrix am am <- as.matrix(au) index(am) coredata(am) # Convert the original austres into a matrix am2 am2 <- as.matrix(austres)
am2
au
sunspots
sunspots_xts <- as.xts(sunspots)
sunspots_xts
index(sunspots_xts)
# Split edhec into years
edhec_years <- split(edhec, f = "years")
# Use lapply to calculate the cumsum for each year in edhec_years
edhec_ytd <- lapply(edhec_years, FUN = cumsum)
# Use do.call to rbind the results
edhec_xts <- do.call(rbind, edhec_ytd)
help(OlsonNames)
?as.xts
?as.xts
library(xts)
?as.xts
?xts
