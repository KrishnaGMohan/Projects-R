library(data.table)
DT <- data.table(x = c(2, 1, 2, 1, 2, 2, 1), y = seq(1, 13, by = 2, z = seq(2, 14, by = 2)) DT
DT <- data.table(x = c(2, 1, 2, 1, 2, 2, 1), y = seq(1, 13, by = 2), z = seq(2, 14, by = 2)) DT
DT # Mean of columns DT[, lapply(.SD, mean), by = .(x)] # Median of columns DT[, lapply(.SD, median), by = .(x)]
DT <- data.table[                 grp = c(6, 6, 8, 8, 8),                 Q1 = c(2, 2, 3, 5, 2,),                 Q2 = c(5, 5, 4, 4, 1),                 Q3 = c(2, 1, 4, 2, 4),                 H1 = c(3, 4, 5, 2, 4),                 H2 = c(5, 2, 4, 1, 2)                 ]
DT <- data.table[                 grp = c(6, 6, 8, 8, 8),                 Q1 = c(2, 2, 3, 5, 2),                 Q2 = c(5, 5, 4, 4, 1),                 Q3 = c(2, 1, 4, 2, 4),                 H1 = c(3, 4, 5, 2, 4),                 H2 = c(5, 2, 4, 1, 2)                 ]
DT <- data.table[grp = c(6, 6, 8, 8, 8),                 Q1 = c(2, 2, 3, 5, 2),                 Q2 = c(5, 5, 4, 4, 1),                 Q3 = c(2, 1, 4, 2, 4),                 H1 = c(3, 4, 5, 2, 4),                 H2 = c(5, 2, 4, 1, 2)]
DT <- data.table(                 grp = c(6, 6, 8, 8, 8),                 Q1 = c(2, 2, 3, 5, 2),                 Q2 = c(5, 5, 4, 4, 1),                 Q3 = c(2, 1, 4, 2, 4),                 H1 = c(3, 4, 5, 2, 4),                 H2 = c(5, 2, 4, 1, 2)                 )
DT
DT <- data.table(                 grp = c(6, 6, 8, 8, 8),                 Q1 = c(2, 2, 3, 5, 2),                 Q2 = c(5, 5, 4, 4, 1),                 Q3 = c(2, 1, 4, 2, 4),                 H1 = c(3, 4, 5, 2, 4),                 H2 = c(5, 2, 4, 1, 2)                 ) DT # Calculate the sum of the Q columns
DT[, lapply(.SD, sum), .SDcols=2:4]
# Calculate the sum of columns H1 and H2 
DT[,lapply(.SD,sum), .SDcols=paste0("H",1:2)]
# Select all but the first row of groups 1 and 2, returning only the grp column and the Q columns. 
DT[, .SD[-1], by = grp, .SDcols = paste0("Q", 1:3)]
DT <- data.table(x = c(2, 1, 2, 1, 2, 2, 1), y = seq(1, 13, by = 2), z = seq(2, 14, by = 2)) DT DT[, c(lapply(.SD, sum), .N), by = .(x), .SDcols = c("x", "y", "z")]
#----------------------------------------------------------------------------- # #   Subset od Data # #----------------------------------------------------------------------------- library(data.table) DT <- data.table(x = c(2, 1, 2, 1, 2, 2, 1), y = seq(1, 13, by = 2), z = seq(2, 14, by = 2)) DT # Mean of columns DT[, lapply(.SD, mean), by = .(x)] # Median of columns DT[, lapply(.SD, median), by = .(x)] #----------------------------------------------------------------------------- DT <- data.table(                 grp = c(6, 6, 8, 8, 8),                 Q1 = c(2, 2, 3, 5, 2),                 Q2 = c(5, 5, 4, 4, 1),                 Q3 = c(2, 1, 4, 2, 4),                 H1 = c(3, 4, 5, 2, 4),                 H2 = c(5, 2, 4, 1, 2)                 ) DT # Calculate the sum of the Q columns
DT[, lapply(.SD, sum), .SDcols=2:4]
# Calculate the sum of columns H1 and H2 
DT[,lapply(.SD,sum), .SDcols=paste0("H",1:2)]
# Select all but the first row of groups 1 and 2, returning only the grp column and the Q columns. 
DT[, .SD[-1], by = grp, .SDcols = paste0("Q", 1:3)]
#----------------------------------------------------------------------------- DT <- data.table(x = c(2, 1, 2, 1, 2, 2, 1), y = seq(1, 13, by = 2), z = seq(2, 14, by = 2)) DT # Sum of all columns and the number of rows DT[, c(lapply(.SD, sum), .N), by = .(x), .SDcols = c("x", "y", "z")] # Cumulative sum of column x and y while grouping by x and z > 8 DT[, lapply(.SD, cumsum), by = .(by1 = x, by2 = z > 8), .SDcols = c("x", "y")] # Chaining DT[, lapply(.SD, cumsum), by = .(by1 = x, by2 = z > 8), .SDcols = c("x", "y")][, lapply(.SD, max), by = .(by1), .SDcols = c("x", "y")]
library(data.table) # The data.table DT DT <- data.table(A = letters[c(1, 1, 1, 2, 2)], B = 1:5)
DT[, Total := sum(B), by = A]
DT
DT[c(2, 4), B := B + 1L] DT
DT[2:4, Total2 := sum(B), by = .(A)] DT
DT[[3]]
DT <- data.table(A = c(1, 1, 1, 2, 2), B = 1:5) DT <- data.table(A = c(1, 1, 1, 2, 2), B = 1:5) DT
DT[, .(B := B + 1L, C := A + B, D := 2)]
DT[, `:=`(B = B + 1L, C = A + B, D = 2)]
DT[, `:=`(B = B + 1L, C = A + B, D = 2)] DT
DT[, `:=`(B = B + 1L, C = A + B, D = 2)] DT DT[, c("B","C","D")]:=.(B + 1L, A+B, 2)] DT
DT[, `:=`(B = B + 1L, C = A + B, D = 2)] DT DT[, c("B","C","D"):=.(B + 1L, A+B, 2)] DT
DT <- data.table(A = c(1, 1, 1, 2, 2), B = 1:5) DT DT[, `:=`(B = B + 1L, C = A + B, D = 2)] DT DT[, c("B","C","D"):=.(B + 1L, A+B, 2)] DT
# A variable my_cols has already been defined. Use it to delete these columns from DT. my_cols <- c("B", "C") DT[, (my_cols) := NULL]
DT
DT[,DT[[2]] := NULL]
names(DT)
names(DT)[2]4
names(DT)[2]
DT[,names(DT)[2] := NULL]
DT
DT <- data.table(A = c(1, 1, 1, 2, 2), B = 1:5) DT # Update B with B + 1 and add a new column C with A + B, and D with constant 2.  DT[, `:=`(B = B + 1L, C = A + B, D = 2)] DT #  DT[, c("B","C","D"):=.(B + 1L, A+B, 2)]  # This will also work # A variable my_cols has been defined. Use it to delete these columns from DT. my_cols <- c("B", "C") DT[, (my_cols) := NULL] DT # Finally, Delete column D by number (2), not by name (D). DT[, names(DT)[2] := NULL]
DT
DT <- data.table(x = c(2, 1, 2, 1, 2, 2, 1), y = seq(1, 13, by = 2), z = seq(2, 14, by = 2)) 
library(data.table)
DT <- data.table(x = c(2, 1, 2, 1, 2, 2, 1), y = seq(1, 13, by = 2), z = seq(2, 14, by = 2)) 
DT
DT[, lapply(.SD, cumsum), by = .(by1 = x, by2 = z > 8), .SDcols = c("x", "y")][, lapply(.SD, max), by = .(by1), .SDcols = c("x", "y")]
DT[, lapply(.SD, cumsum), by = .(by1 = x, by2 = z > 8), .SDcols = c("x", "y")]
library(data.table) DT <- data.table(A = c(c, b, a, c, b, a), B = 1:6) DT DT[A == "a"] DT[, A == "a"] DT[A == "b"]
library(data.table) DT <- data.table(A = c(c, b, a, c, b, a), B = 1:6)
library(data.table) DT <- data.table(A = c("c", "b", "a", "c", "b", "a"), B = 1:6) DT
DT[A == "a"] DT[, A == "a"] DT[A == "b"]
iris
# Convert iris to a data.table
iris <- data.table(iris)
# Species is "virginica"
iris[Species == "virginica"]
# Species is either "virginica" or "versicolor"
iris[Species %in% c("virginica",  "versicolor")]
# Convert iris to a data.table iris <- data.table(iris) # Species is "virginica" iris[Species == "virginica"] # Species is either "virginica" or "versicolor" iris[Species %in% c("virginica", "versicolor")]
# Convert iris to a data.table iris <- as.data.table(iris) # Species is "virginica" iris[Species == "virginica"] # Species is either "virginica" or "versicolor" iris[Species %in% c("virginica", "versicolor")]
iris <- as.data.table(iris)
colnames(DT)
colnames(iris)
grep(colnames(iris),"^Sepal\.*")
grep(colnames(iris),"^Sepal.*$")
grep(colnames(iris),"^Sepal.*$")
grep(colnames(iris)[1],"^Sepal.*$")
colnames(iris)
lappy(colnames(iris),grep,"^Sepal\.*")
lappy(colnames(iris),grep,"^Sepal.*")
lapply(colnames(iris),grep,"^Sepal.*")
z <-colnames(iris)
z
lapply(z,grep,"Sepal")
gsub("^Sepal\\.", "", names(iris))
names(iris)
iris
iris <- as.data.table(iris) # Remove the Sepal. prefix...  setnames(iris, gsub("^Sepal\\.", "", names(iris))) # Remove the two columns starting with "Petal" iris[, grep("^Petal", names(iris)) := NULL]
iris
iris[Length * Width > 20]
iris[, is_large = Length * Width > 25]
iris[, is_large := Length * Width > 25]
iris[is_large > 25]
iris[is_large]
iris
iris[is_large]
iris[is_large == TRUE]
# iris as a data.table iris <- as.data.table(iris) # Remove the Sepal. prefix...  setnames(iris, gsub("^Sepal\\.", "", names(iris))) # Remove the two columns starting with "Petal" iris[, grep("^Petal", names(iris)) := NULL]
# Cleaned up iris data.table iris # Rows for which area is greater than 20 sq cm iris[Length * Width > 20] # Add new boolean column is_large (area greater than 25 sq cm) iris[, is_large := Length * Width > 25] # Now select rows again where the area is greater than 25 square centimeters iris[is_large == TRUE]
# iris as a data.table iris <- as.data.table(iris) # Remove the Sepal. prefix...  setnames(iris, gsub("^Sepal\\.", "", names(iris))) # Remove the two columns starting with "Petal" iris[, grep("^Petal", names(iris)) := NULL]
